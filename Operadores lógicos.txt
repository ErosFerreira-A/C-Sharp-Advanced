
Os operadores lógicos em C# são utilizados para combinar expressões booleanas e retornam um valor booleano (true ou false). Eles são frequentemente usados em condicionais e loops. Aqui estão os principais operadores lógicos em C#:

1. AND lógico (&&)
Retorna true se ambas as expressões forem verdadeiras.
Exemplo: a && b
Tabela Verdade:
true && true = true
true && false = false
false && true = false
false && false = false
2. OR lógico (||)
Retorna true se pelo menos uma das expressões for verdadeira.
Exemplo: a || b
Tabela Verdade:
true || true = true
true || false = true
false || true = true
false || false = false
3. NOT lógico (!)
Inverte o valor lógico da expressão.
Exemplo: !a
Tabela Verdade:
!true = false
!false = true
4. AND lógico bit a bit (&)
Funciona de forma similar ao &&, mas avalia ambos os operandos mesmo se o primeiro for falso (não possui curto-circuito).
Exemplo: a & b
5. OR lógico bit a bit (|)
Funciona de forma similar ao ||, mas avalia ambos os operandos mesmo se o primeiro for verdadeiro (não possui curto-circuito).
Exemplo: a | b
6. XOR lógico bit a bit (^)
Retorna true se apenas um dos operandos for verdadeiro.
Exemplo: a ^ b
Tabela Verdade:
true ^ true = false
true ^ false = true
false ^ true = true
false ^ false = false
